/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { InternshipCreateNestedManyWithoutEmployersInput } from "./InternshipCreateNestedManyWithoutEmployersInput";
import { Type } from "class-transformer";
import { JobPostingCreateNestedManyWithoutEmployersInput } from "./JobPostingCreateNestedManyWithoutEmployersInput";
import { JobCreateNestedManyWithoutEmployersInput } from "./JobCreateNestedManyWithoutEmployersInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class EmployerCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  companyName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => InternshipCreateNestedManyWithoutEmployersInput,
  })
  @ValidateNested()
  @Type(() => InternshipCreateNestedManyWithoutEmployersInput)
  @IsOptional()
  @Field(() => InternshipCreateNestedManyWithoutEmployersInput, {
    nullable: true,
  })
  internships?: InternshipCreateNestedManyWithoutEmployersInput;

  @ApiProperty({
    required: false,
    type: () => JobPostingCreateNestedManyWithoutEmployersInput,
  })
  @ValidateNested()
  @Type(() => JobPostingCreateNestedManyWithoutEmployersInput)
  @IsOptional()
  @Field(() => JobPostingCreateNestedManyWithoutEmployersInput, {
    nullable: true,
  })
  jobPostings?: JobPostingCreateNestedManyWithoutEmployersInput;

  @ApiProperty({
    required: false,
    type: () => JobCreateNestedManyWithoutEmployersInput,
  })
  @ValidateNested()
  @Type(() => JobCreateNestedManyWithoutEmployersInput)
  @IsOptional()
  @Field(() => JobCreateNestedManyWithoutEmployersInput, {
    nullable: true,
  })
  jobs?: JobCreateNestedManyWithoutEmployersInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website?: string | null;
}

export { EmployerCreateInput as EmployerCreateInput };
