version: "3"
services:
  server:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${PORT}:3000
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@db:3307/${DB_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    depends_on:
      - migrate
    restart: on-failure

  migrate:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    command: npm run db:init
    working_dir: /app/server  # Убедитесь, что этот путь верен
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@db:3306/${DB_NAME}
    depends_on:
      - db  # Обновлено для указания зависимости как элемента массива
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}"]
      timeout: 45s
      interval: 10
      retries: 10

  db:
    image: mysql:8.0  # Используйте актуальную версию MySQL
    ports:
      - ${DB_PORT}:3307
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql  # Убедитесь, что этот путь корректен
    command: --default-authentication-plugin=mysql_native_password
    restart: always

  adminer:
    image: adminer
    restart: always
    ports:
      - 1234:8080

volumes:
  mysql_data:  # Переименуйте том, чтобы избежать путаницы

